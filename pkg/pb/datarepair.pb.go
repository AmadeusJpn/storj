// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: datarepair.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// InjuredSegment is the queue item used for the data repair queue
type InjuredSegment struct {
	Path       Path    `protobuf:"bytes,1,opt,name=path,proto3,casttype=Path" json:"path,omitempty"`
	LostPieces []int32 `protobuf:"varint,2,rep,packed,name=lost_pieces,json=lostPieces" json:"lost_pieces,omitempty"`
}

func (m *InjuredSegment) Reset()                    { *m = InjuredSegment{} }
func (m *InjuredSegment) String() string            { return proto.CompactTextString(m) }
func (*InjuredSegment) ProtoMessage()               {}
func (*InjuredSegment) Descriptor() ([]byte, []int) { return fileDescriptorDatarepair, []int{0} }

func (m *InjuredSegment) GetPath() Path {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *InjuredSegment) GetLostPieces() []int32 {
	if m != nil {
		return m.LostPieces
	}
	return nil
}

func init() {
	proto.RegisterType((*InjuredSegment)(nil), "repair.InjuredSegment")
}

func init() { proto.RegisterFile("datarepair.proto", fileDescriptorDatarepair) }

var fileDescriptorDatarepair = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x49, 0x2c, 0x49,
	0x2c, 0x4a, 0x2d, 0x48, 0xcc, 0x2c, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0,
	0xa4, 0xb8, 0xd2, 0xf3, 0xd3, 0xf3, 0x21, 0x62, 0x4a, 0xfe, 0x5c, 0x7c, 0x9e, 0x79, 0x59, 0xa5,
	0x45, 0xa9, 0x29, 0xc1, 0xa9, 0xe9, 0xb9, 0xa9, 0x79, 0x25, 0x42, 0x32, 0x5c, 0x2c, 0x05, 0x89,
	0x25, 0x19, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x4e, 0x1c, 0xbf, 0xee, 0xc9, 0xb3, 0x04, 0x24,
	0x96, 0x64, 0x04, 0x81, 0x45, 0x85, 0xe4, 0xb9, 0xb8, 0x73, 0xf2, 0x8b, 0x4b, 0xe2, 0x0b, 0x32,
	0x53, 0x93, 0x53, 0x8b, 0x25, 0x98, 0x14, 0x98, 0x35, 0x58, 0x83, 0xb8, 0x40, 0x42, 0x01, 0x60,
	0x11, 0x27, 0x96, 0x28, 0xa6, 0x82, 0xa4, 0x24, 0x36, 0xb0, 0xe9, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xaf, 0x01, 0x11, 0xac, 0x85, 0x00, 0x00, 0x00,
}
